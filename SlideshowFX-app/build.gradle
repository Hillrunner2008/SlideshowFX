/*
 * Copyright 2015 Thierry Wasylczenko
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

version = '1.0.0'

dependencies {
    compile project(':SlideshowFX-engines')
    compile project(':SlideshowFX-global-configuration')
    compile project(':SlideshowFX-osgi')
    compile project(':SlideshowFX-utils')
    compile project(':SlideshowFX-plugin')

    compile project(':SlideshowFX-content-extension')
    compile project(':SlideshowFX-hosting-connector')
    compile project(':SlideshowFX-markup')
    compile project(':SlideshowFX-snippet-executor')

    compile configurations.felix
    compile configurations.fontawesomefx
    compile configurations.freemarker
    compile configurations.jsoup
    compile configurations.leapmotion
    compile configurations.twitter4j
    compile configurations.vertx
    compile configurations.zxing

    testCompile configurations.bytebuddy
    testCompile configurations.junit
    testCompile configurations.mockito
    testCompile configurations.testfx
    testCompile configurations.vertxunit
}

jar {
    manifest {
        attributes("Implementation-Title": "SlideshowFX",
                   "Implementation-Version": version,
                   "Implementation-Vendor": "Thierry Wasylczenko",
                   "JavaFX-Preloader-Class": "com.twasyl.slideshowfx.app.SlideshowFXPreloader",
                   "Main-Class": "com.twasyl.slideshowfx.app.SlideshowFX",
                   "JavaFX-Version": "8.0+",
                   "Class-Path": configurations.compile.collect { it.getName() }.join(' '))
    }
}

test {
    workingDir = rootDir
    jvmArgs "-DtestResultsDir=${testResultsDir.absolutePath}"
}