/*
 * Copyright 2014 Thierry Wasylczenko
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.0'
    }
}

subprojects {
    apply plugin: 'java'

    sourceCompatibility = 1.8
    targetCompatibility= 1.8
}

apply plugin: 'org.asciidoctor.gradle.asciidoctor'

ext {
	allLibs = new File(rootDir, '/lib')
    asciidoctorj = fileTree(dir: allLibs, include: 'asciidoctorj/*.jar')
	felix = fileTree(dir: allLibs, include: 'Felix/*.jar')
    freemarker = fileTree(dir: allLibs, include: 'freemarker/*.jar')
    hamcrest = fileTree(dir: allLibs, include: 'hamcrest-core-1.3.jar')
	jsoup = fileTree(dir: allLibs, include: 'jsoup-1.8.1.jar')
	junit = fileTree(dir: allLibs, include: 'junit-4.11.jar')
	leapmotion = fileTree(dir: allLibs, include: 'Leap/*')
	markdown = fileTree(dir: allLibs, include: 'markdown/*.jar')
	scribe = fileTree(dir: allLibs, include: 'Scribe/*.jar')
    twitter = fileTree(dir: allLibs, include: 'Twitter/*.jar')
	textile = fileTree(dir: allLibs, include: 'WikiText/*.jar')
	vertx = fileTree(dir: allLibs, include: 'Vert.x/*.jar')		
	zxing = fileTree(dir: allLibs, include: 'ZXing/*.jar')

	jdk = System.env.'JAVA_HOME'

    pluginsFolder = new File(System.getProperty("user.home"), '.SlideshowFX/plugins')
    felixCacheFolder = new File(System.getProperty("user.home"), '.SlideshowFX/felix-cache')
}

asciidoctor {
    outputDir = new File("$buildDir/docs/asciidoctor")
    options = [
            attributes: [
                    'source-highlighter': 'coderay',
                    toc: '',
                    'javafx-version': 8,
                    'jdk-version': 8,
                    'gradle-version': '2.2.1',
                    'asciidoctorj-version': '1.5.1',
                    'apache-felix-version': '4.4.1',
                    'commons-collections-version': '3.2.1',
                    'commons-lang-version': '2.4',
                    'freemarker-version': '2.3.21',
                    'hamcrest-core-version': '1.3',
                    'jackson-annotations-version': '2.2.2',
                    'jackson-core-version': '2.2.2',
                    'jackson-databind-version': '2.2.2',
                    'jrubycomplete-version': '1.7.16.1',
                    'jsoup-version': '1.8.1',
                    'netty-all-version': '4.0.21.Final',
                    'wikitext-core-version': '2.2.0.N20140811-1615',
                    'wikitext-textile-core-version': '2.2.0.N20140702-2138',
                    'twitter4j-version': '4.0.2',
                    'txtmark-version': '0.11',
                    'vertx-version': '2.1.5',
                    'zxing-core-version': '3.1.0',
                    'zxing-jse-version': '3.1.0',
                    'ace-version': '1.1.8'
            ]
    ]
}

task installMarkupPlugins(dependsOn: [':SlideshowFX-asciidoctor:jar',
                                      ':SlideshowFX-html:jar',
                                      ':SlideshowFX-markdown:jar',
                                      ':SlideshowFX-textile:jar']) << {

	copy {
		from project(':SlideshowFX-asciidoctor').jar.archivePath
        from project(':SlideshowFX-html').jar.archivePath
        from project(':SlideshowFX-markdown').jar.archivePath
        from project(':SlideshowFX-textile').jar.archivePath

		into pluginsFolder
	}
}

task installContentExtensionPlugins(dependsOn: [':SlideshowFX-alert-extension:jar',
                                               ':SlideshowFX-code-extension:jar',
                                               ':SlideshowFX-image-extension:jar',
                                               ':SlideshowFX-link-extension:jar',
                                               ':SlideshowFX-quote-extension:jar']) << {

    copy {
        from project(':SlideshowFX-alert-extension').tasks['jar'].archivePath
        from project(':SlideshowFX-code-extension').tasks['jar'].archivePath
        from project(':SlideshowFX-image-extension').tasks['jar'].archivePath
        from project(':SlideshowFX-link-extension').tasks['jar'].archivePath
        from project(':SlideshowFX-quote-extension').tasks['jar'].archivePath

        into pluginsFolder
    }
}

task installUploaderPlugins(dependsOn : [':SlideshowFX-dropbox-uploader:jar']) << {
    copy {
        from project(':SlideshowFX-dropbox-uploader').tasks['jar'].archivePath

        into pluginsFolder
    }
}

task installSlideshowFX(dependsOn : [':SlideshowFX-app:assemble',
                                     ':installMarkupPlugins',
                                     ':installContentExtensionPlugins',
                                     ':installUploaderPlugins']) << {
}

task buildGradleWrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}